<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Dynamic Product Filter</title>
  <style>
    body {
      font-family: "Segoe UI", sans-serif;
      background-color: #f4f6f9;
      margin: 0;
      padding: 20px;
      text-align: center;
    }

    h1 {
      color: #333;
    }

    select {
      padding: 10px;
      font-size: 16px;
      margin-bottom: 20px;
      border-radius: 8px;
      border: 1px solid #888;
    }

    .product-list {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 15px;
    }

    .product-card {
      background-color: #fff;
      border: 1px solid #ddd;
      border-radius: 10px;
      width: 200px;
      padding: 15px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
      transition: transform 0.2s;
    }

    .product-card:hover {
      transform: scale(1.05);
    }

    .product-name {
      font-size: 18px;
      font-weight: 600;
      color: #222;
    }

    .product-category {
      color: #666;
      margin-top: 5px;
    }
  </style>
</head>
<body>
  <h1>üõçÔ∏è Dynamic Product Filter</h1>

  <label for="categoryFilter"><strong>Filter by Category:</strong></label>
  <select id="categoryFilter">
    <option value="All">All</option>
    <option value="Shoes">Shoes</option>
    <option value="Shirts">Shirts</option>
    <option value="Gadgets">Gadgets</option>
  </select>

  <div class="product-list" id="productList"></div>

  <script>
    // Sample Product Data
    const products = [
      { name: "Running Shoes", category: "Shoes" },
      { name: "Casual Shirt", category: "Shirts" },
      { name: "Smartwatch", category: "Gadgets" },
      { name: "Formal Shoes", category: "Shoes" },
      { name: "Bluetooth Earbuds", category: "Gadgets" },
      { name: "Polo T-Shirt", category: "Shirts" }
    ];

    const productList = document.getElementById("productList");
    const categoryFilter = document.getElementById("categoryFilter");

    // Function to display products
    function displayProducts(filteredProducts) {
      productList.innerHTML = ""; // Clear current products

      if (filteredProducts.length === 0) {
        productList.innerHTML = "<p>No products found.</p>";
        return;
      }

      filteredProducts.forEach((product) => {
        const card = document.createElement("div");
        card.classList.add("product-card");

        const name = document.createElement("div");
        name.classList.add("product-name");
        name.textContent = product.name;

        const category = document.createElement("div");
        category.classList.add("product-category");
        category.textContent = `Category: ${product.category}`;

        card.appendChild(name);
        card.appendChild(category);
        productList.appendChild(card);
      });
    }

    // Function to filter products
    function filterProducts() {
      const selectedCategory = categoryFilter.value;
      if (selectedCategory === "All") {
        displayProducts(products);
      } else {
        const filtered = products.filter(
          (p) => p.category === selectedCategory
        );
        displayProducts(filtered);
      }
    }

    // Event listener for dropdown
    categoryFilter.addEventListener("change", filterProducts);

    // Initial display
    displayProducts(products);
  </script>
</body>
</html>
